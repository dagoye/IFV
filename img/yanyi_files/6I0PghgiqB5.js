if (self.CavalryLogger) { CavalryLogger.start_js(["AHZLi"]); }

__d("observeIntersection",["invariant","ErrorUtils","IntersectionObserver"],(function(a,b,c,d,e,f,g){"use strict";__p&&__p();var h=typeof WeakMap==="function",i={__noRoot:!0},j=h?new WeakMap():new Map();function k(a){__p&&__p();var b=a.threshold;if(Array.isArray(b)){var c={};b.forEach(function(a){c[String(a)]=!0});b=Object.keys(c).sort()}var d=babelHelpers["extends"]({},a,{threshold:b}),e={};Object.keys(d).sort().forEach(function(a){e[a]=d[a]});return JSON.stringify(e)}function a(a,c,d){__p&&__p();d===void 0&&(d={});var e=k({rootMargin:d.rootMargin,threshold:d.threshold}),f=d.root||i,l=j.get(f);l==null&&(l={},j.set(f,l));var m=l[e];if(m==null){d=new(b("IntersectionObserver"))(function(a){a.forEach(function(a){m!=null||g(0,undefined);var c=m.targetToCallbacksMap.get(a.target);c&&c.length>0&&c.forEach(function(c){b("ErrorUtils").applyWithGuard(c,null,[a],null,"observeIntersection")})})},d);m={intersectionObserver:d,referenceCount:0,targetToCallbacksMap:h?new WeakMap():new Map()};l[e]=m}d=m.targetToCallbacksMap.get(a);d==null&&(m.intersectionObserver.observe(a),m.referenceCount+=1,d=[],m.targetToCallbacksMap.set(a,d));d.push(c);var n=!1;return{remove:function(){__p&&__p();if(n)return;var b=m.targetToCallbacksMap.get(a);b!=null||g(0,undefined);if(b.length===1)m.intersectionObserver.unobserve(a),m.targetToCallbacksMap["delete"](a),m.referenceCount-=1;else{var d=b.indexOf(c);d!==-1||g(0,undefined);b.splice(d,1)}m.referenceCount===0&&(l!=null||g(0,undefined),delete l[e],Object.keys(l).length===0&&j["delete"](f));n=!0}}}e.exports=a}),null);